<Window x:Class="AIRdrop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        Background="#131313"
        Title="A.I.R.drop" SizeChanged="OnResize"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Height="750" Width="1280" MinHeight="750" MinWidth="1280" Loaded="WindowLoaded">
    <Window.Resources>
        <DataTemplate x:Key="ModTemplate">
            <Border CornerRadius="5" Margin="5">
                <Border.BorderBrush>
                    <SolidColorBrush Color="#101010" Opacity="0.75"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="#101010" Opacity="0.75"/>
                </Border.Background>
                <Grid VerticalAlignment="Center" x:Name="GridItem" Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock VerticalAlignment="Center" Panel.ZIndex="4" FontSize="40" FontWeight="Medium" HorizontalAlignment="Center" Foreground="#f2f2f2">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSpoiler}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Text" Value="SPOILER"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsNsfw}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Text" Value="NSFW"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Rectangle Height="172" Panel.ZIndex="3" Fill="#202020" Opacity="0.99" Stretch="UniformToFill" Margin="5,10,5,5" VerticalAlignment="Center">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSpoiler}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsNsfw}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <Image Margin="5,10,5,5" Source="{Binding Path=Image,Mode=OneWay,IsAsync=True}" Height="168" Panel.ZIndex="2"  VerticalAlignment="Center" Stretch="Uniform">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="5" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSpoiler}" Value="False">
                                        <Setter Property="Effect" Value="{x:Null}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsNsfw}" Value="True">
                                        <Setter Property="Effect" Value="{x:Null}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Rectangle Height="168" Panel.ZIndex="1" Fill="Black" Stretch="UniformToFill" Margin="5,10,5,5" VerticalAlignment="Center">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="{Binding Path=Image,Mode=OneWay,IsAsync=True}"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock x:Name="Title" Margin="5" Grid.Row="1" FontWeight="Medium" TextTrimming="WordEllipsis" FontSize="20" Background="Transparent" VerticalAlignment="Center"  Foreground="#f2f2f2" Text="{Binding Path=Title}"/>
                    <Popup PlacementTarget="{Binding ElementName=Title}" IsOpen="{Binding IsMouseDirectlyOver, ElementName=Title, Mode=OneWay}" AllowsTransparency="True">
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Text="{Binding Path=Title}" Foreground="#f2f2f2" FontWeight="Medium" FontSize="18" VerticalAlignment="Center" />
                        </Border>
                    </Popup>
                    <fa5:ImageAwesome Name="LoadingBar" Foreground="#006ac1" Grid.Row="0" Icon="Solid_Spinner" Height="50" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
                    <StackPanel Grid.Row="2" Margin="10,-5,10,5" Orientation="Horizontal">
                        <Image VerticalAlignment="Center" Source="{Binding Path=Owner.Avatar}" Margin="0,0,10,0" Height="35"/>
                        <TextBlock VerticalAlignment="Center" FontSize="18" Foreground="#909090" Text="{Binding Path=Owner.Name}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Owner.HasUpic}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Image VerticalAlignment="Center" Source="{Binding Path=Owner.Upic}" Height="25"/>
                    </StackPanel>
                    <Grid Name="CatGrid" HorizontalAlignment="Center" Grid.Row="5" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Name="CatIcon" Grid.Column="0" VerticalAlignment="Center" Source="{Binding Path=Category.Icon}" Margin="0,0,10,0" Stretch="Uniform" Height="35" Width="35"/>
                        <TextBlock Name="CatText" Grid.ColumnSpan="2" FontSize="16" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=CategoryName}" TextTrimming="WordEllipsis">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Grid.Column" Value="1"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Category.HasIcon}" Value="False">
                                            <Setter Property="Grid.Column" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Popup PlacementTarget="{Binding ElementName=CatGrid}" HorizontalAlignment="Center" AllowsTransparency="True">
                            <Popup.Style>
                                <Style TargetType="Popup">
                                    <Setter Property="IsOpen" Value="True"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=CatGrid}" Value="False"/>
                                                <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=CatIcon}" Value="False" />
                                                <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=CatText}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsOpen" Value="False"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Style>
                            <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#101010" Opacity="0.9"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="#101010" Opacity="0.9"/>
                                </Border.Background>
                                <Grid HorizontalAlignment="Center" Margin="10" Grid.Row="5" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" VerticalAlignment="Center" Source="{Binding Path=Category.Icon}" Margin="0,0,10,0" Stretch="Uniform" Height="35" />
                                    <TextBlock Grid.ColumnSpan="2" VerticalAlignment="Center" FontSize="18" FontWeight="SemiBold" Foreground="#f2f2f2" Text="{Binding Path=CategoryName}" >
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Grid.Column" Value="0"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Category.HasIcon}" Value="True">
                                                        <Setter Property="Grid.Column" Value="1"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <Popup MaxWidth="400" PlacementTarget="{Binding ElementName=Desc}" AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Setter Property="IsOpen" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=Desc, Mode=OneWay}" Value="True"/>
                                            <Condition Binding="{Binding Path=HasDescription}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Text="{Binding Path=Description}" Foreground="#f2f2f2" TextWrapping="Wrap" FontSize="18" VerticalAlignment="Center" />
                        </Border>
                    </Popup>
                    <TextBlock Name="Desc" Margin="5,0,5,2" FontSize="16" TextWrapping="Wrap" Grid.Row="3" Height="50" TextTrimming="WordEllipsis" Background="Transparent" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=Description}"/>
                    <StackPanel Grid.Row="6" Margin="0,0,0,5"  HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel Background="Transparent" Name="DateAddedPanel" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HasUpdates}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <fa5:ImageAwesome Name="DateAddedIcon" Margin="0,0,5,0" Height="15" Icon="Solid_Plus" Foreground="#f2f2f2"/>
                            <TextBlock Name="DateAddedText" Margin="5,0,0,0" VerticalAlignment="Center" FontSize="18" Foreground="#f2f2f2" Text="{Binding Path=DateAddedFormatted}" />
                        </StackPanel>
                        <StackPanel Background="Transparent" Name="DateUpdatedPanel" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"  >
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HasUpdates}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <fa5:ImageAwesome Name="DateUpdatedIcon" Margin="0,0,5,0" Height="15" Icon="Solid_Sync" Foreground="#f2f2f2"/>
                            <TextBlock Name="DateUpdatedText" Margin="5,0,0,0" VerticalAlignment="Center" FontSize="18" Foreground="#f2f2f2" Text="{Binding Path=DateUpdatedAgo}"/>
                        </StackPanel>
                    </StackPanel>
                    <Popup PlacementTarget="{Binding ElementName=DateAddedPanel}" HorizontalAlignment="Center" AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Setter Property="IsOpen" Value="True"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateAddedPanel}" Value="False"/>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateAddedIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateAddedText}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="False"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Foreground="#f2f2f2" FontWeight="Medium" FontSize="18" VerticalAlignment="Center" Text="{Binding Path=DateAdded,StringFormat={}Added {0}}"/>
                        </Border>
                    </Popup>
                    <Popup PlacementTarget="{Binding ElementName=DateUpdatedPanel}" HorizontalAlignment="Center" AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Setter Property="IsOpen" Value="True"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateUpdatedPanel}" Value="False"/>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateUpdatedIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateUpdatedText}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="False"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Foreground="#f2f2f2" FontWeight="Medium" FontSize="18" VerticalAlignment="Center" Text="{Binding Path=DateUpdated,StringFormat={}Updated {0}}"/>
                        </Border>
                    </Popup>
                    <StackPanel Name="StatPanel" Background="Transparent" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4">
                        <fa5:ImageAwesome Name="DownloadIcon" Margin="0,0,5,0" Height="15" Icon="Solid_Download" Foreground="#f2f2f2"/>
                        <TextBlock Name="DownloadText" FontSize="18" Margin="5,0,10,0" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=DownloadString}" />
                        <fa5:ImageAwesome Name="LikeIcon" Margin="5,0,5,0" Height="15" Icon="Solid_Heart" Foreground="#f2f2f2"/>
                        <TextBlock Name="LikeText" FontSize="18" Margin="5,0,10,0" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=LikeString}" />
                        <fa5:ImageAwesome Name="ViewIcon" Margin="5,0,5,0" Height="15" Icon="Solid_Eye" Foreground="#f2f2f2"/>
                        <TextBlock Name="ViewText" FontSize="18" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=ViewString}" />
                    </StackPanel>
                    <Popup PlacementTarget="{Binding ElementName=StatPanel}" HorizontalAlignment="Center" AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Setter Property="IsOpen" Value="True"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=StatPanel}" Value="False"/>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DownloadIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DownloadText}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=LikeIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=LikeText}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=ViewIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=ViewText}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="False"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Foreground="#f2f2f2" FontWeight="Medium" FontSize="18" VerticalAlignment="Center" >
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0:N0} Downloads • {1:N0} Likes • {2:N0} Views">
                                        <Binding Path="Downloads"/>
                                        <Binding Path="Likes"/>
                                        <Binding Path="Views"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                    </Popup>
                    <Grid Grid.Row="7" Margin="5,5,5,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" FontSize="18" Foreground="#f2f2f2" FontWeight="Medium" Height="30" Width="95" Background="#303030" BorderBrush="#353535" VerticalAlignment="Bottom" Content="More Info" Click="MoreInfo_Click"/>
                        <Button Grid.Column="1" FontSize="18" Foreground="#f2f2f2" FontWeight="Medium" Height="30" Width="95" Background="#303030" BorderBrush="#353535" VerticalAlignment="Top" Content="Download" IsEnabled="{Binding Path=Compatible}" Click="Download_Click"/>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>

    </Window.Resources>
    <Grid>
        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.2*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="1.85*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="0.65*"/>
                <ColumnDefinition Width="0.4*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.RowSpan="3" Grid.ColumnSpan="8" Name="MediaPanel" Panel.ZIndex="5" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="90"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="4" Grid.ColumnSpan="2" Panel.ZIndex="-1">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="#080808" Opacity="0.95"/>
                    </Border.BorderBrush>
                    <Border.Background>
                        <SolidColorBrush Color="#080808" Opacity="0.95"/>
                    </Border.Background>
                </Border>
                <Border>
                    <StackPanel Margin="10" Name="BigImagePanel" VerticalAlignment="Center" Grid.Row="0">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.15*"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0.15*"/>
                            </Grid.ColumnDefinitions>
                            <Button HorizontalAlignment="Right" VerticalAlignment="Center" Click="ImageLeft_Click" Name="BigImageLeft" Content="&lt;" Height="50" Width="50" FontWeight="SemiBold" FontSize="20"/>
                            <Image Grid.Column="1" Name="BigScreenshot" Stretch="Uniform" Margin="20,0,20,0" VerticalAlignment="Center"/>
                            <fa5:ImageAwesome Panel.ZIndex="-1" Grid.Column="1" Foreground="#ffee5f" Icon="Solid_Spinner" Height="40" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
                            <Button Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Click="ImageRight_Click" Name="BigImageRight" Content=">" Height="50" Width="50" FontWeight="SemiBold" FontSize="20"/>
                        </Grid>
                        <TextBlock Name="BigCaptionText" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" FontSize="18" Foreground="#f2f2f2" Padding="5"/>
                    </StackPanel>
                </Border>
                <StackPanel Grid.ColumnSpan="2" Margin="20" Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button Click="CloseMedia_Click" Content="Close" Height="50" Width="200" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="2"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
            </Grid>
            <Grid Grid.ColumnSpan="8" Grid.RowSpan="3" Name="DescPanel" Panel.ZIndex="4" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition/>
                    <RowDefinition Height="90"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border Grid.RowSpan="4" Grid.ColumnSpan="2" Panel.ZIndex="-1">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="#080808" Opacity="0.95"/>
                    </Border.BorderBrush>
                    <Border.Background>
                        <SolidColorBrush Color="#080808" Opacity="0.95"/>
                    </Border.Background>
                </Border>
                <Border Grid.ColumnSpan="2" BorderThickness="0">
                    <TextBlock Grid.ColumnSpan="2" VerticalAlignment="Center" Text="{Binding Path=Title}" TextTrimming="WordEllipsis" Foreground="#f2f2f2" FontWeight="SemiBold" FontSize="40" Padding="6,3,3,3"/>
                </Border>
                <StackPanel Name="ImagePanel" Visibility="Collapsed" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2">
                    <Grid HorizontalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.15*"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="0.15*"/>
                        </Grid.ColumnDefinitions>
                        <Button HorizontalAlignment="Right" VerticalAlignment="Center" Click="ImageLeft_Click" Name="ImageLeft" Content="&lt;" Height="50" Width="50" FontWeight="SemiBold" FontSize="20"/>
                        <Image Grid.Column="1" Cursor="Hand" PreviewMouseLeftButtonDown="Image_Click" Name="Screenshot" Stretch="Uniform" MaxHeight="400" Margin="20,0,20,0" VerticalAlignment="Center"/>
                        <fa5:ImageAwesome Panel.ZIndex="-1" Grid.Column="1" Foreground="#ffee5f" Icon="Solid_Spinner" Height="40" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
                        <Button Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Click="ImageRight_Click" Name="ImageRight" Content=">" Height="50" Width="50" FontWeight="SemiBold" FontSize="20"/>
                    </Grid>
                    <TextBlock Name="CaptionText" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" FontSize="18" Foreground="#f2f2f2" Padding="5"/>
                </StackPanel>
                <Border Grid.Row="1" Grid.ColumnSpan="2" Background="#404040"/>
                <RichTextBox Margin="5" Name="DescText" Grid.Row="2" Background="Transparent" BorderThickness="0" IsDocumentEnabled="True" VerticalScrollBarVisibility="Auto" IsReadOnly="True" Foreground="#f2f2f2" Padding="10,0,10,10" FontSize="18"/>
                <StackPanel Grid.ColumnSpan="2" Margin="20" Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button Name="AltButton" Click="AltDownload_Click" Content="Alt. Downloads" IsEnabled="{Binding Path=Compatible}" Margin="0,0,20,0" Height="50" Width="200" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="2"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Border Name="DownloadButton" Margin="0,0,20,0" Height="50" Width="200" CornerRadius="2" Background="#ffee5f">
                        <Button Margin="3" Click="Download_Click" Content="Download" IsEnabled="{Binding Path=Compatible}" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="2"/>
                                </Style>
                            </Button.Resources>
                        </Button>
                    </Border>
                    <Button Name="HomepageButton" Click="Homepage_Click" Margin="0,0,20,0" Height="50" Width="200" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="2"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                    <Button Click="CloseDesc_Click" Content="Close" Height="50" Width="200" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="2"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </StackPanel>
            </Grid>
            <ComboBox Margin="10,0,0,0" Grid.Column="0" IsEnabled="False" Name="FilterBox" Height="35" MinWidth="130" HorizontalAlignment="Stretch" FontSize="18"  FontWeight="Medium" SelectionChanged="FilterSelectionChanged"/>
            <ComboBox Margin="5,0,0,0" Grid.Column="1" IsEnabled="False" FontWeight="Medium" FontSize="18" Name="TypeBox" Height="35" HorizontalAlignment="Stretch" MinWidth="100" SelectionChanged="TypeFilterSelectionChanged">
                <ComboBoxItem xml:space="preserve" IsSelected="True">Mods</ComboBoxItem>
                <ComboBoxItem xml:space="preserve">WiPs</ComboBoxItem>
                <ComboBoxItem xml:space="preserve">Sounds</ComboBoxItem>
            </ComboBox>
            <ComboBox Margin="5,0,0,0" Grid.Column="2" IsEnabled="False" Name="CatBox" Height="35" HorizontalAlignment="Stretch" MinWidth="150" SelectionChanged="MainFilterSelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate >
                        <StackPanel Orientation="Horizontal">
                            <Image Margin="0,0,5,0" VerticalAlignment="Center" Height="25" Source="{Binding Path=Icon}"/>
                            <TextBlock VerticalAlignment="Center" FontSize="18" FontWeight="Medium" Text="{Binding Path=Name}"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox Margin="5,0,0,0" Grid.Column="3" IsEnabled="False" Name="SubCatBox" Height="35" HorizontalAlignment="Stretch" MinWidth="200" SelectionChanged="SubFilterSelectionChanged">
                <ComboBox.ItemTemplate>
                    <DataTemplate >
                        <StackPanel Orientation="Horizontal">
                            <Image Margin="0,0,5,0" VerticalAlignment="Center" Height="25" Source="{Binding Path=Icon}"/>
                            <TextBlock VerticalAlignment="Center" FontSize="18" FontWeight="Medium" Text="{Binding Path=Name}"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBox Margin="5,0,35,0" Background="#353535" Foreground="#f2f2f2" BorderBrush="#353535" FontSize="18" Padding="4,0,0,0" Grid.Column="4" IsEnabled="False" KeyDown="SearchBar_KeyDown" Name="SearchBar" Height="35" MinWidth="200" HorizontalAlignment="Stretch" VerticalContentAlignment="Center"/>
            <TextBlock Margin="5,0,35,0" Padding="7,5,3,3" Grid.Column="4" IsHitTestVisible="False" Height="35" FontSize="18" MinWidth="200" HorizontalAlignment="Left" Text="Search..." VerticalAlignment="Center" Foreground="#f2f2f2">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=SearchBar, Path=Text.IsEmpty}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Button Grid.Column="4" IsEnabled="False" HorizontalAlignment="Right" Click="SearchButton_Click" Name="SearchButton" Height="35" Width="35">
                <fa5:ImageAwesome Icon="Solid_Search" Foreground="#f2f2f2" Margin="3"/>
            </Button>
            <StackPanel Grid.Column="5" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5,0,0,0" >
                <CheckBox Name="NSFWCheckbox" IsEnabled="False" Unchecked="NSFWCheckbox_Checked" Checked="NSFWCheckbox_Checked"  Margin="0,0,5,0" VerticalAlignment="Center" />
                <TextBlock Foreground="#f2f2f2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" FontWeight="Medium">
        Include<LineBreak/>
        NSFW
                </TextBlock>
            </StackPanel>
            <Image Grid.Column="6" Name="GB" VerticalAlignment="Center" HorizontalAlignment="Center" Height="35" Source="../Assets/GameBanana.png" Cursor="Hand" MouseLeftButtonDown="GameBanana_Click"/>
            <Popup PlacementTarget="{Binding ElementName=GB}" IsOpen="{Binding IsMouseDirectlyOver, ElementName=GB, Mode=OneWay}" AllowsTransparency="True">
                <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="#101010" Opacity="0.9"/>
                    </Border.BorderBrush>
                    <Border.Background>
                        <SolidColorBrush Color="#101010" Opacity="0.9"/>
                    </Border.Background>
                    <TextBlock Margin="10" Text="Go to gamebanana.com" Foreground="#f2f2f2" FontWeight="Medium" FontSize="18" VerticalAlignment="Center" />
                </Border>
            </Popup>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.ColumnSpan="8" Grid.Row="2">
                <Button IsEnabled="False" Name="PageLeft" Click="DecrementPage" Content="&lt;" HorizontalAlignment="Right" Margin="0,0,15,0" FontSize="18" FontWeight="Medium"  Height="35" Width="35" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2"/>
                <TextBlock Name="Page" Text="Page 1" Foreground="#f2f2f2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" FontWeight="Medium" />
                <Button IsEnabled="False" Name="PageRight" Click="IncrementPage" Content=">" HorizontalAlignment="Left" Margin="15,0,0,0" FontSize="18" FontWeight="Medium" Height="35" Width="35" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2"/>
                <ComboBox IsEnabled="False" Margin="15,0,15,0" Name="PageBox" SelectionChanged="PageBox_SelectionChanged" FontSize="18" Height="35" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel Margin="5,5,10,5" Grid.ColumnSpan="8" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2">
                <Button Margin="0,0,15,0" Click="ClearCache" Name="ClearCacheButton" Content="Refresh" HorizontalAlignment="center" FontSize="18" FontWeight="Medium"  Height="35" Width="80" Background="#181818" BorderBrush="#252525" IsEnabled="False" Foreground="#f2f2f2">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Button.Resources>
                </Button>
                <TextBlock Margin="0,0,15,0" Foreground="#f2f2f2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" FontWeight="Medium">
        Per Page:
                </TextBlock>
                <ComboBox IsEnabled="False" Name="PerPageBox" SelectionChanged="PerPageSelectionChanged" Height="35" FontSize="18" VerticalAlignment="Center">
                    <ComboBoxItem>10</ComboBoxItem>
                    <ComboBoxItem IsSelected="True">20</ComboBoxItem>
                    <ComboBoxItem>30</ComboBoxItem>
                    <ComboBoxItem>40</ComboBoxItem>
                    <ComboBoxItem>50</ComboBoxItem>
                </ComboBox>
            </StackPanel>
            <fa5:ImageAwesome Name="LoadingBar" Grid.ColumnSpan="8" Foreground="#006ac1" Panel.ZIndex="1" Grid.Row="1" Icon="Solid_Spinner" Height="110" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
            <StackPanel Name="ErrorPanel" Grid.ColumnSpan="8" Grid.Row="1" Panel.ZIndex="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Name="BrowserMessage" HorizontalAlignment="Center"  Opacity="1" Background="Transparent" Foreground="#f2f2f2" FontWeight="Medium" TextWrapping="Wrap" Width="800" TextAlignment="Center" FontSize="25"/>
                <Button Margin="10" Click="BrowserRefresh" Name="BrowserRefreshButton" Content="Retry" HorizontalAlignment="center" FontSize="18" FontWeight="Medium"  Height="40" Width="140" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2">
                    <Button.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Button.Resources>
                </Button>
            </StackPanel>
            <Border Grid.ColumnSpan="8" Grid.Row="1" CornerRadius="5" Margin="10,0,10,0">
                <Border.BorderBrush>
                    <SolidColorBrush Color="Black" Opacity="0.75"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="Black" Opacity="0.75"/>
                </Border.Background>
                <ListView Margin="5" Panel.ZIndex="1" Style="{StaticResource ListviewStyle}" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" VerticalContentAlignment="Top" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="Transparent" BorderBrush="Transparent" Name="FeedBox" ItemTemplate="{StaticResource ModTemplate}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid SizeChanged="UniformGrid_SizeChanged"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>
            </Border>
        </Grid>
    </Grid>

</Window>
